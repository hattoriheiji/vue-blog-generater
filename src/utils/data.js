export let postData = '[{"layout":"post","title":"How to use git?","date":"2017-12-21T00:00:00.000Z","desc":"git 使用简介","keywords":"Tutorial,Jekyll,gh-pages,website,blog,Git","categories":"cate1","tags":["Git","ee"],"iconb":"fa icon-git","name":"2017-03-24-HTML5","coverimg":"https://blog.zhangruipeng.me/hexo-theme-icarus/gallery/math.jpg","info":"Minos is a simple and retro styled Hexo theme which concentrates more on your ideas. Minos is very expressive as it has extensive plugin support, colorful code highlighting choices, flexible configurations and out-of-box multi-language support. Meanwhile","contents":"","daysAgo":193},{"layout":"post","title":"Git status","date":"2017-12-21T00:00:00.000Z","desc":"git 使用简介","keywords":"Tutorial,Jekyll,gh-pages,website,blog,Git","categories":"cate2","tags":["Git","Tutorial"],"iconb":"fa icon-git","name":"2018-17-22-Git","coverimg":"https://blog.zhangruipeng.me/hexo-theme-icarus/gallery/salt-lake.jpg","info":"简言之，DRY原则鼓励对代码进行抽象，但是鼓励得过了头。DRY原则说，如果你发现重复的代码，就把它们提取出去做成一个“模板”或者“框架”。对于抽象我非常的在行，实际上程序语言专家做的许多研究，就是如何设计更好的抽象。然而我并不奉行所谓DRY原则，并不是尽一切可能避免“重复”。“避免重复”并不等于“抽象”。有时候适当的重复代码是有好处的","contents":"","daysAgo":193},{"layout":"post","title":"README?","date":"2017-12-21T00:00:00.000Z","desc":"git 使用简介","keywords":"Tutorial,Jekyll,gh-pages,website,blog,Git","categories":"cate3","tags":["Git"],"iconb":"fa icon-git","name":"README","info":"为了避免将多线程的复杂性呈现在网络开发者面前，HTML和DOM API被设计成这样:没有脚本可以察觉到任何其他同时执行的脚本。即便是通过workers接口。 这样设计的意图是:所有实现的行为，可以被认为是在浏览的上下文环境中，完全序列化的脚本执行","coverimg":"https://www.hdwallpapers.net/previews/starry-night-over-corsica-986.jpg","contents":"","daysAgo":193}]'